// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 String    @id @default(uuid())
  compoundId         String    @unique @map(name: "compound_id")
  userId             String    @unique @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map(name: "accounts")
}

model Session {
  id           String   @id @default(uuid())
  userId       String   @unique @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map(name: "email_verified")
  image         String?
  login         String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @default(now()) @map(name: "updated_at")

  @@map(name: "users")
}

model VerificationRequest {
  id         String   @id @default(uuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map(name: "created_at")
  updatedAt  DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "verification_requests")
}

model Repository {
  id         Int       @id
  webhookId  Int       @unique
  userId     String    @map(name: "user_id")
  createdAt  DateTime  @default(now()) @map(name: "created_at")
  updatedAt  DateTime  @default(now()) @map(name: "updated_at")
  branchName String
  filePath   String
  name       String
  enabled    Boolean
  openApis   OpenApi[]

  @@map(name: "repositories")
}

model OpenApi {
  id           String     @id @default(uuid())
  userId       String     @map(name: "user_id")
  repository   Repository @relation(fields: [repositoryId], references: [id])
  repositoryId Int        @unique
  createdAt    DateTime   @default(now()) @map(name: "created_at")
  updatedAt    DateTime   @default(now()) @map(name: "updated_at")
  version      Int        @default(1)
  commits      Commit[]

  @@map(name: "open_apis")
}

model Commit {
  id        Int      @id
  message   String   @map(name: "user_id")
  author    Int      @unique
  openApi   OpenApi  @relation(fields: [openApiId], references: [id])
  openApiId String
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "commits")
}
